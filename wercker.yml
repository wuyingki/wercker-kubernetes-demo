build:
    box: python:2.7
    steps:

    # Check that our application's tests are passing. Since this is a python
    # application, our entry script will also install the application's dependencies
    # with Virtualenv
    - script:
        name: Nose tests
        code: bin/tests

    # Take our tested application revision and its dependencies, bake it in to a
    # Docker image, and push to Docker Hub.
    - internal/docker-push:
        entrypoint: bin/get_ip
        cmd: 0.0.0.0 8080
        working-dir: $WERCKER_ROOT
        tag: $WERCKER_GIT_COMMIT
        ports: "8080"
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        repository: $DOCKERHUB_REPO 

deploy-to-k8s:
    box: python:2.7
    steps:

    # https://github.com/wercker/step-bash-template
    # This Wercker step will look for files in our repo with a .template extension.
    # It will expand any environment variables in those files, then remove the
    # template extension.
    
    - bash-template
    #   1. kubernetes_deployment.yml.template
    #   2. kubernetes_service.yml.template
    - script:
        name: Prepare Kubernetes files
        code: |
           mkdir $WERCKER_OUTPUT_DIR/kubernetes
           mv kubernetes_*.yml $WERCKER_OUTPUT_DIR/kubernetes
    
    - kubectl:
        name: deploy to kubernetes
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_OUTPUT_DIR/kubernetes
